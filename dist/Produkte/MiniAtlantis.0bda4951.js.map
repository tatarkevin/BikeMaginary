{"mappings":"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","sources":["JavaScript/Submenu.js"],"sourcesContent":["//TODO: Hier kannst du deine eigenen Klassennamen eintragen.\r\n//Du musst nur sicherstellen, dass die Werte zwischen den Gänsefüßchen absolut exakt so\r\n//heißen, wie deine Klassennamen.\r\nconst Headerbar__Name = \"Headerbar\";\r\nconst Headerbar__Button__Name = \"Headerbar__Button\";\r\nconst submenu_Klassenname = \"Submenu\";\r\nconst ausgeklapptes_Submenu_Name = \"Submenu--expanded\";\r\nconst breakpoint_desktop = 1250; // Das ist der Breakpoint ab wann die mobile Headerbar angezeigt wird\r\n\r\n//Ab hier nichts ändern, außer du kennst dich aus!\r\n{\r\n  const all_buttons_array = document.getElementsByClassName(\r\n    Headerbar__Button__Name\r\n  );\r\n  const button_array = new Array();\r\n  const submenu_array = new Array();\r\n  const combined_array = new Array();\r\n  let active_Submenu;\r\n  const headerbar_ref = document.getElementsByClassName(Headerbar__Name)[0];\r\n  let b_keepSubmenuActive = false;\r\n  const expanded_submenu_class = ausgeklapptes_Submenu_Name;\r\n\r\n  class submenu_link {\r\n    constructor(button, submenu) {\r\n      this.button = button;\r\n      this.submenu = submenu;\r\n    }\r\n  }\r\n\r\n  let index = 0;\r\n  let button_id = 0;\r\n  for (let button of all_buttons_array) {\r\n    if (button.dataset.submenu_id) {\r\n      button.dataset.index = index++;\r\n      button_array.push(button);\r\n    }\r\n    button.dataset.button_id = button_id++;\r\n  }\r\n\r\n  for (let submenu of document.getElementsByClassName(submenu_Klassenname)) {\r\n    if (submenu.dataset.submenu_id) {\r\n      submenu.dataset.default_display = getComputedStyle(submenu).display;\r\n      submenu.style.display = \"none\";\r\n      submenu_array.push(submenu);\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < button_array.length; i++) {\r\n    for (let j = 0; j < submenu_array.length; j++) {\r\n      if (\r\n        button_array[i].dataset.submenu_id ===\r\n        submenu_array[j].dataset.submenu_id\r\n      ) {\r\n        combined_array.push(\r\n          new submenu_link(button_array[i], submenu_array[j])\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  function calculateLeftOffsets() {\r\n    if (window.innerWidth >= breakpoint_desktop) {\r\n      for (let button of button_array) {\r\n        const belonging_submenu = combined_array[button.dataset.index].submenu;\r\n        belonging_submenu.style.display =\r\n          belonging_submenu.dataset.default_display;\r\n        const belonging_submenu_width =\r\n          belonging_submenu.getBoundingClientRect().width;\r\n        belonging_submenu.style.display = \"none\";\r\n        let button_offset = button.getBoundingClientRect().left;\r\n        if (button_offset + belonging_submenu_width > window.innerWidth) {\r\n          button_offset +=\r\n            window.innerWidth - (button_offset + belonging_submenu_width) - 20;\r\n        }\r\n        button.dataset.left_offset = button_offset;\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateLeftOffsets();\r\n\r\n  var calculateLeftButtonOffsets;\r\n  window.onresize = function () {\r\n    clearTimeout(calculateLeftButtonOffsets);\r\n    calculateLeftButtonOffsets = setTimeout(calculateLeftOffsets, 500);\r\n  };\r\n\r\n  let previousHoveredButton = undefined;\r\n\r\n  function showSubmenu(button) {\r\n    b_keepSubmenuActive = true;\r\n    if (window.innerWidth >= breakpoint_desktop) {\r\n      if (active_Submenu != undefined) {\r\n        hideSubmenu();\r\n      }\r\n      let index = button.dataset.index;\r\n      element = combined_array[index].submenu;\r\n\r\n      element.style.display = element.dataset.default_display;\r\n      element.style.top =\r\n        headerbar_ref.getBoundingClientRect().bottom - 2 + \"px\"; //Weil ich jetzt immer die bottom edge neu berechne, geht endlich die animation\r\n      element.style.left = button.dataset.left_offset + \"px\";\r\n      element.classList.add(expanded_submenu_class);\r\n      active_Submenu = element;\r\n    }\r\n  }\r\n\r\n  function hideSubmenu() {\r\n    if (window.innerWidth >= breakpoint_desktop) {\r\n      if (active_Submenu != undefined) {\r\n        active_Submenu.classList.remove(expanded_submenu_class);\r\n        active_Submenu.style.display = \"none\";\r\n        active_Submenu = undefined;\r\n        previousHoveredButton = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let button of button_array) {\r\n    /* button.addEventListener(\"mouseover\", function () {\r\n      showSubmenu(button);\r\n    }); */\r\n    button.addEventListener(\"mouseover\", function (event) {\r\n      if (window.innerWidth >= breakpoint_desktop) {\r\n        event.preventDefault();\r\n        showSubmenu(button);\r\n      }\r\n    });\r\n  }\r\n\r\n  for (let button of all_buttons_array) {\r\n    button.addEventListener(\"mouseover\", function () {\r\n      if (\r\n        previousHoveredButton != undefined &&\r\n        previousHoveredButton.dataset.button_id !== button.dataset.button_id\r\n      ) {\r\n        hideSubmenu();\r\n      }\r\n      previousHoveredButton = button;\r\n    });\r\n  }\r\n\r\n  for (let submenu of submenu_array) {\r\n    submenu.addEventListener(\"mouseleave\", () => {\r\n      hideSubmenu();\r\n    });\r\n    submenu.addEventListener(\"mouseover\", () => {\r\n      b_keepSubmenuActive = true;\r\n    });\r\n  }\r\n\r\n  function checkIfSubmenuCanBeActive() {\r\n    if (!b_keepSubmenuActive) {\r\n      hideSubmenu();\r\n    }\r\n  }\r\n\r\n  function delayedCheckForHidingSubmenu() {\r\n    b_keepSubmenuActive = false;\r\n    setTimeout(checkIfSubmenuCanBeActive, 100);\r\n  }\r\n\r\n  headerbar_ref.addEventListener(\"mouseleave\", function () {\r\n    delayedCheckForHidingSubmenu();\r\n  });\r\n\r\n  for (let item of button_array) {\r\n    console.log(item);\r\n  }\r\n  console.log(\"------------------\");\r\n  for (let item of submenu_array) {\r\n    console.log(item);\r\n  }\r\n  console.log(\"------------------\");\r\n  for (let item of combined_array) {\r\n    console.log(item);\r\n  }\r\n  console.log(\"------------------\");\r\n  for (let item of all_buttons_array) {\r\n    console.log(item);\r\n  }\r\n}\r\n"],"names":["Headerbar__Name","Headerbar__Button__Name","submenu_Klassenname","ausgeklapptes_Submenu_Name","breakpoint_desktop","all_buttons_array","document","getElementsByClassName","button_array","Array","submenu_array","combined_array","active_Submenu","headerbar_ref","b_keepSubmenuActive","expanded_submenu_class","submenu_link","constructor","button4","submenu3","this","button","submenu","index1","button_id","button3","dataset","submenu_id","index","push","submenu2","default_display","getComputedStyle","display","style","i","length","j","calculateLeftOffsets","window","innerWidth","belonging_submenu","belonging_submenu_width","getBoundingClientRect","width","button_offset","left","left_offset","calculateLeftButtonOffsets","previousHoveredButton","showSubmenu","undefined","hideSubmenu","index2","element","top","bottom","classList","add","remove","onresize","clearTimeout","setTimeout","button1","addEventListener","event","preventDefault","button2","submenu1","checkIfSubmenuCanBeActive","delayedCheckForHidingSubmenu","item","console","log","item1","item2"],"version":3,"file":"MiniAtlantis.0bda4951.js.map"}